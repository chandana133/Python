class Book:
    total_books = 0  # Class variable to keep track of total books

    def __init__(self, title, author, isbn):
        self.title = title
        self.author = author
        self.isbn = isbn
        Book.total_books += 1

    def update_title(self, new_title):
        self.title = new_title

    def update_author(self, new_author):
        self.author = new_author

    def display_info(self, user_type="reader"):
        if user_type == "librarian":
            return f"Book: {self.title}, Author: {self.author}, ISBN: {self.isbn}"
        return f"Book: {self.title}, Author: {self.author}"

    @staticmethod
    def book_info():
        return "Books are essential sources of knowledge."

    @classmethod
    def get_total_books(cls):
        return cls.total_books


class Author:
    total_authors = 0  # Class variable to keep track of total authors

    def __init__(self, name, birthdate):
        self.name = name
        self.birthdate = birthdate
        self.books = []  # List to store books written by the author
        Author.total_authors += 1

    def add_book(self, book):
        if isinstance(book, Book):
            self.books.append(book)

    def remove_book(self, isbn):
        self.books = [book for book in self.books if book.isbn != isbn]

    @staticmethod
    def author_info():
        return "Authors create the content that shapes literature and learning."

    @classmethod
    def get_total_authors(cls):
        return cls.total_authors


class Library:
    library_count = 0  # Class variable to keep track of the number of libraries

    def __init__(self):
        self.books = []  # List to store books in the library
        self.authors = []  # List to store authors in the library
        Library.library_count += 1

    def add_book(self, book):
        if isinstance(book, Book):
            self.books.append(book)

    def remove_book(self, isbn):
        self.books = [book for book in self.books if book.isbn != isbn]

    def list_books(self):
        return [book.display_info() for book in self.books]

    @staticmethod
    def library_info():
        return "Libraries provide access to vast resources of knowledge."

    @classmethod
    def get_library_count(cls):
        return cls.library_count


# Testing the implementation
if __name__ == "__main__":
    # Create Authors
    author1 = Author("J.K. Rowling", "1965-07-31")
    author2 = Author("George Orwell", "1903-06-25")
    
    # Create Books
    book1 = Book("Harry Potter", author1.name, "123456789")
    book2 = Book("1984", author2.name, "987654321")
    
    # Assign books to authors
    author1.add_book(book1)
    author2.add_book(book2)
    
    # Create a Library
    library = Library()
    library.add_book(book1)
    library.add_book(book2)
    
    # Display Library Books
    print("Library Books:", library.list_books())
    
    # Static and Class Methods Test
    print(Book.book_info())
    print(Author.author_info())
    print(Library.library_info())
    print("Total Books:", Book.get_total_books())
    print("Total Authors:", Author.get_total_authors())
    print("Total Libraries:", Library.get_library_count())

output
Library Books: ['Book: Harry Potter, Author: J.K. Rowling', 'Book: 1984, Author: George Orwell']
Books are essential sources of knowledge.
Authors create the content that shapes literature and learning.
Libraries provide access to vast resources of knowledge.
Total Books: 2
Total Authors: 2
Total Libraries: 1